#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize a4paper
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\branch Introduction
\selected 0
\filename_suffix 0
\color #faf0e6
\end_branch
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\begin_layout Plain Layout


\backslash
setcounter{secnumdepth}{4}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename images/Logo_Politecnico_Milano.png
	display false
	scale 30

\end_inset


\end_layout

\begin_layout Standard
\align center
Software Engineering 2 project:
\begin_inset Formula $\mathit{PowerEnJoy}$
\end_inset


\end_layout

\begin_layout Standard
\paragraph_spacing other 0
\align center
A.A.
 2016/2017 - Professor E.
 di Nitto
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{20pt}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\paragraph_spacing single
\align center

\series bold
\size huge
Design Document
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{50pt}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Version 
\series bold
1.0 
\begin_inset Formula $\mathrm{-}11/12/2016$
\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
smallskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Pietro Avolio
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Mat 878640
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Guido Borrelli
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Mat 874451
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Subsection
Purpose
\end_layout

\begin_layout Standard
The purpose of this Design Document is to provide a more detailed description
 of the PowerEnJoy system architecture, to describe main architectural component
s, their interfaces and interactions.
 Two sections are also dedicated to algorithms and user interfaces.
\end_layout

\begin_layout Standard
This document is thus intended for project manages, developers and testers
 and it can be considered as a good overview to base the development and
 the maintenance on.
\end_layout

\begin_layout Subsection
Scope
\end_layout

\begin_layout Standard
As stated in the RASD document, the PowerEnJoy system is made of three main
 components: two very thin clients (PowerEnJoy Mobile Application and PowerEnJoy
 Control Room) and one application server (PowerEnJoy Core).
\end_layout

\begin_layout Standard
In this document, we will describe how this components create a four layers
 architecture, how they interact and communicate one with each other.
 We we also provide a physical deployment structure.
\end_layout

\begin_layout Standard
For the sake of coherence and consistency, we will provide a strong cross-refere
nce to the RASD document, of which this Design Document is a natural follow-up
 and deepening.
\end_layout

\begin_layout Subsection
Definitions, acronyms and abbreviations
\end_layout

\begin_layout Standard
In order to avoid ambiguity and possible misunderstaings, here we integrate
 the definitions, acronyms and abbreviations table from the RASD document.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Relational Data
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Data structured according to the relational model
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
NoSQL Data
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Data not strcutured according to the relational model
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RDBMS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Relational Database Management Server
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
NSDBMS
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
NoSQL Database Management Server
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Java EE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Java Enterprise Edition
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
EJB
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Enterprise JavaBeans
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
JPA
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Java Persistence API
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Reference Documents
\end_layout

\begin_layout Standard
TODO
\end_layout

\begin_layout Subsection
Document Structure
\end_layout

\begin_layout Standard
TODO
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Architectural Design
\end_layout

\begin_layout Standard
This section provides a very datailed view over the system architecture
 and its components, describing them at both the logical and physical level.
\end_layout

\begin_layout Standard
Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:High-level-components"

\end_inset

 describes high-level components of the system; each of this components
 will be separately described and detailed in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Component-view"

\end_inset

; section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Deployment-view"

\end_inset

 focuses on the deployment of the system on phisical tiers; section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Runtime-view"

\end_inset

 describes the dynamic behaviour of the softwares; section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Component-interfaces"

\end_inset

 focuses on the interface between different components; finally section
 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Selected-architectural-styles"

\end_inset

 provides a description of the design choices and patterns.
\end_layout

\begin_layout Subsection
High level components and their interaction
\begin_inset CommandInset label
LatexCommand label
name "subsec:High-level-components"

\end_inset


\end_layout

\begin_layout Standard
As stated in the RASD document, the system is composed of three main softwares:
 two very thin clients that are PowerEnJoy Mobile Application and PowerEnJoy
 Control Room, and a server containing all the application logic that is
 PowerEnJoy Core.
 Plus, also company vehicles can be considered as passive clients, since
 they complete some tasks automatically without human interactions.
\end_layout

\begin_layout Standard
The architetuctar style choosen for the system is a classical client-server
 architectured, splitted on four layers as shown in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Logical-layer"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Layers - Page 1.png
	display false
	scale 35

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Logical layers 
\begin_inset CommandInset label
LatexCommand label
name "fig:Logical-layer"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The system also needs to interface with some external components in order
 to accomplish some tasks.
 This components are:
\end_layout

\begin_layout Itemize
Payment Gateway
\end_layout

\begin_layout Itemize
SMS Gateway
\end_layout

\begin_layout Itemize
Support Ticket System
\end_layout

\begin_layout Standard
A diagram including an high level overview of the system components is shown
 in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:High-level-components"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/High level view component - Page 1.png
	display false
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
High level components overview 
\begin_inset CommandInset label
LatexCommand label
name "fig:High-level-components"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Component view
\begin_inset CommandInset label
LatexCommand label
name "subsec:Component-view"

\end_inset


\end_layout

\begin_layout Subsubsection
Relational Database
\end_layout

\begin_layout Standard
The relational database is in charge of storing all the data that well fit
 the relational model.
 It runs on a MySQL Community Edition as DBMS and it uses InnoDB as database
 engine for all the tables.
 ACID properties must be guaranteed over all the transactions.
 
\end_layout

\begin_layout Standard
The relational database communicates with the business logic tier only:
 communication goes using the TCP/IP protocol on an arbitrary network port.
 
\end_layout

\begin_layout Standard
The database must be phisically protected and duplicated in order to avoid
 data loss.
 Communication must be encrypted and different users should be created and
 assigned to the different softwares that access the database in order to
 always guarantee the minimum required level of provileges per software.
\end_layout

\begin_layout Subsubsection
NoSQL Database
\end_layout

\begin_layout Standard
The NoSQL database is in charge of storing all the data generated by the
 system such as logs and all the kinds of data that will not require any
 update or delete operation and will be accessed in order to be consulted
 only.
 The decision of using a NoSQL database instead of a traditional relational
 database is driven by the need of velocity in inserting and accessing a
 big amount of data.
 For this reason, it's not required to ensure all the ACID properties over
 transactions.
 
\end_layout

\begin_layout Standard
The NoSQL database runs on MongoDB as DBMS and communicates with the business
 logic tier using the TCP/IP protocol on an arbitrary port.
 
\end_layout

\begin_layout Standard
All the security concerns stated for the relational database apply to the
 NoSQL database as well.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Database diagram - Page 1.png
	display false
	scale 20

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Entity-relational diagram for both the relational and the NoSQL databases
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Application Server
\end_layout

\begin_layout Standard
The application server is where the PowerEnJoy Core is executed and were
 all the business logic is.
 It is implemented using Java EE and uses GlassFish Server.
 
\end_layout

\begin_layout Standard
The business logic is implemented using custom EJBs; the access to the database
 is implemented using the JPA for both the relational and the NoSQL databases.
\end_layout

\begin_layout Standard
In order to expose its functionalities, the PowerEnJoy Core provides RESTful
 APIs as interface to the clients and to the web server.
 The detailed behaviour of this interface is described in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Application-server-to-clients"

\end_inset

.
\end_layout

\begin_layout Subsubsection*
Account Handler
\end_layout

\begin_layout Standard
This component handle all stuff regarding accounts like: registration, log-in,
 information updating.
 Furthermore, it provides the token for client identification.
\end_layout

\begin_layout Subsubsection*
Operators Handler
\end_layout

\begin_layout Standard
This component is the same as before but regarding operators, so it provides
 special functions regarding just the operators privilege.
\end_layout

\begin_layout Subsubsection*
Vehicle Manager
\end_layout

\begin_layout Standard
It is able to give information about vehicles and their status, furthermore
 it should guarantee the possibility to change the status of the car manually
 by the operator and inserting/deleting car according to real events occuring.
\end_layout

\begin_layout Subsubsection*
Reservations Handler
\end_layout

\begin_layout Standard
It occurs about the insert, update, and delete of vehicle reservations by
 customers.
 Up to the policy, it should in some cases decide to apply a charge.
\end_layout

\begin_layout Subsubsection*
Rentals Handler
\end_layout

\begin_layout Standard
Its work is to give a dialog with the vehicle, such that let it be possibile
 remote vehicle actions without key.
\end_layout

\begin_layout Subsubsection*
Payment Handler
\end_layout

\begin_layout Standard
This beans handle all payment requests we must generate and interface himself
 with the external gateway corresponding.
\end_layout

\begin_layout Subsubsection*
Log Manager
\end_layout

\begin_layout Standard
Just satisfy the need of keep tracking of everything in case of backup needed
 or for legal purposes.
\end_layout

\begin_layout Subsubsection*
CronTasks Manager
\end_layout

\begin_layout Standard
(non ricordo bene) Needed in order to keep memory of all vehicle information
 during the rental period.
\end_layout

\begin_layout Subsubsection*
Support Requests Handler
\end_layout

\begin_layout Standard
It occurs about the insert, update, and delete of support requests needed
 by the customers.
 These request are later handled personally by the operator.
\end_layout

\begin_layout Subsubsection*
Email Sender
\end_layout

\begin_layout Standard
Permit to mass mail users according to some parameters or events occuring.
 
\end_layout

\begin_layout Subsubsection*
Push Notifications sender
\end_layout

\begin_layout Standard
Permit to mass push notification users according to some parameters or events
 occuring.
 
\end_layout

\begin_layout Subsubsection*
Fee Manager
\end_layout

\begin_layout Standard
According to the policy, after gathering all data from a rental it calculates
 the final cost eligible by the company.
\end_layout

\begin_layout Subsubsection
Web server
\end_layout

\begin_layout Subsubsection
Clients
\end_layout

\begin_layout Subsubsection*
PowerEnJoy Vehicles
\end_layout

\begin_layout Standard
A stated in the RASD document and in the previous sections of this document,
 we consider PowerEnJoy vehicles as clients.
 Both the hardware and the software solutions used to implement the information
 system installed on the vehicles is not part of this project.
\end_layout

\begin_layout Standard
The communication with vehicles is implemented using messages and queries:
 the PowerEnJoy core can query a specific vehicle in order to get information
 (e.g.
 position, number of passengers, mechanical status) and send commands (e.g.
 to unlock doors); vehicles can send messages to the PowerEnJoy core as
 reaction to some events (i.e.
 when the rental starts and when the rental ends).
\end_layout

\begin_layout Subsubsection*
PowerEnJoy Mobile Application
\end_layout

\begin_layout Standard
A stated in the RASD document, this mobile application represents the main
 interface for customers and it should be implemented for both the Android
 and the iOS platforms.
\end_layout

\begin_layout Standard
The main purpose of the mobile application is to retrieve information from
 the PowerEnJoy core, to transmit user actions and show their results.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

The Android application is implemented using Java and all the native components
 offered by the Android SDK.
\end_layout

\begin_layout Standard
The iOS application is implemented using Swing and the UIKit for the interface.
 A solution involving multi-platform development (e.g.
 Xamarin) can also be taken into account, even if a native implementation
 still remains the most encouraged solution in order to offer the best possibile
 experience to customers.
 A solution involving WebViews is considered an applicable solution for
 matters of reliability.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

The mobile application directly communicates with the business logic using
 its RESTful API interface.
\end_layout

\begin_layout Subsubsection*
PowerEnJoy Control Room
\end_layout

\begin_layout Standard
As stated in the RASD document, the PowerEnJoy control room is a web-application
 and it represents the main interface to the system for the company operators.
 It is implemented using HTML5 and jQuery and it relies on the web server
 tier.
\end_layout

\begin_layout Subsubsection
External components
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
paragraph{SMS Gateway}
\backslash
mbox{}
\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
This component is used in order to notify users using SMS on their mobile
 phone numbers.
 It's not directly implemented by the system but it's used as-a-service
 from Trendoo
\begin_inset Foot
status open

\begin_layout Plain Layout
http://www.trendoo.it
\end_layout

\end_inset

.
 Details on the communication between the system and the gateway is provided
 in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Application-server-to-external-components"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
paragraph{Payment Gateway}
\backslash
mbox{}
\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
This component is used in order to process users' payments.
 It's not directly implemented by the system but it's used as-a-service
 from GestPay provided by Banca Sella
\begin_inset Foot
status open

\begin_layout Plain Layout
https://www.gestpay.it/gestpay/index.jsp
\end_layout

\end_inset

.
 Details on the communication between the system and the gateway is provided
 in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Application-server-to-external-components"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
paragraph{Push Notifications Gateway}
\backslash
mbox{}
\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
This component is used in order to send push notifications to the users
 on their mobile phones.
 It's not directly implemented by the system but it's used as-a-service
 from Google Firebase
\begin_inset Foot
status open

\begin_layout Plain Layout
https://firebase.google.com/
\end_layout

\end_inset

.
 Details on the communication between the system and the gateway is provided
 in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Application-server-to-external-components"

\end_inset

.
\end_layout

\begin_layout Subsection
Deployment view
\begin_inset CommandInset label
LatexCommand label
name "subsec:Deployment-view"

\end_inset


\end_layout

\begin_layout Standard
The physical deployment of the system is done on 3 layers, as shown in figure
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Deployment-diagram"

\end_inset


\end_layout

\begin_layout Itemize
Clients are deployed on different devices according to their finalities.
\end_layout

\begin_layout Itemize
The application server and the web server can be deployed on the same physical
 machine because the web server serves the ControlRoom web-application only.
\end_layout

\begin_layout Itemize
The relational and the NoSQL databases can be deployed on the same physical
 machine.
 However, since they are completely indipendent one from the other, they
 could be moved on different machines as soon as it will be required for
 some reason.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/Deplyment diagram - Page 1.png
	display false
	scale 26

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Deployment diagram
\begin_inset CommandInset label
LatexCommand label
name "fig:Deployment-diagram"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Runtime view
\begin_inset CommandInset label
LatexCommand label
name "subsec:Runtime-view"

\end_inset


\end_layout

\begin_layout Subsection
Component interfaces
\begin_inset CommandInset label
LatexCommand label
name "subsec:Component-interfaces"

\end_inset


\end_layout

\begin_layout Subsubsection
Application server to database
\end_layout

\begin_layout Subsubsection
Application server to clients (REST API)
\begin_inset CommandInset label
LatexCommand label
name "subsec:Application-server-to-clients"

\end_inset


\end_layout

\begin_layout Subsubsection
Web server to clients
\end_layout

\begin_layout Subsubsection
Application server to external components
\begin_inset CommandInset label
LatexCommand label
name "subsec:Application-server-to-external-components"

\end_inset


\end_layout

\begin_layout Subsection
Selected architectural styles and patterns
\begin_inset CommandInset label
LatexCommand label
name "subsec:Selected-architectural-styles"

\end_inset


\end_layout

\begin_layout Section
Algorithm Design
\end_layout

\begin_layout Section
User Interfaces Design
\end_layout

\begin_layout Section
Appendix
\end_layout

\begin_layout Subsection
Tools used
\end_layout

\begin_layout Subsection
Working hours tracking
\end_layout

\end_body
\end_document
